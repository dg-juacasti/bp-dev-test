/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.12.1/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'org.springframework.boot' version '3.3.7'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'java'
}

group = 'com.marvel.api'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '21'

repositories {
    mavenCentral()
}


dependencies {
    testImplementation 'com.intuit.karate:karate-junit5:1.4.1'
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'

    implementation 'com.google.guava:guava:33.2.0-jre'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'ch.qos.logback:logback-classic:1.4.14'
    implementation 'net.logstash.logback:logstash-logback-encoder:7.4'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.projectlombok:lombok:1.18.32'
    annotationProcessor 'org.projectlombok:lombok:1.18.32'
    testImplementation 'org.projectlombok:lombok:1.18.32'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.32'
}

sourceSets {
    test {
        resources {
            srcDir file('src/test/java')
            exclude '**/*.java'
        }
    }
}



test {
    useJUnitPlatform()
    systemProperty "karate.options", System.properties.getProperty("karate.options", "--tags ~@ignore")
    systemProperty "karate.env", System.properties.getProperty("karate.env", "dev")
    outputs.upToDateWhen { false }
    testLogging {
        events "passed", "skipped", "failed"
        showStandardStreams = true
    }
}